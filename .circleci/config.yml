version: 2.1
jobs:
  linter:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Create venv
          command: |
            virtualenv flaskops
      - run:
          name: Install python dependencies
          command: |
            . flaskops/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - run:
          name: Run Linter
          command: |
            . flaskops/bin/activate
            pylint --load-plugins pylint_flask --fail-under=7 app.py
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: |
            docker build --build-arg salt=${SECRET_SALT} -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: Tests
          command: |
            docker run --rm -it registry.heroku.com/${HEROKU_APP_NAME}/web python tests.py
      - run:
         name: Push Docker Image to Heroku Registry
         command: |
            echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
            sudo mkdir -p /usr/local/lib /usr/local/bin
            sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
            sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku

            cat > ~/.netrc << EOF
            machine api.heroku.com
              login $HEROKU_LOGIN
              password $HEROKU_API_KEY
            EOF
            heroku container:${HEROKU_APP_NAME} release
workflows:
  version: 2
  flask-ops-cicd:
    jobs:
      - linter
      - build:
          requires:
            - linter
      - deploy:
          requires:
            - build
